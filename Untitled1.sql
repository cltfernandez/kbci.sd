
INSERT INTO SDTRAN(ACCTNUM,TRANDATE,TRANSEQ,TRANCODE,TRANBBAL,TRANDEB,TRANCRE,TRANEBAL,CHKNUM,CHKBANK,CHKCODE,ADD_DATE,ADD_TIME,[USER],OVERRIDE,PPOSTED,LPOSTED,TRANOLD,REVERSED)
SELECT		SM.ACCTNO,'SYSDATE',(CASE WHEN SM.LSEQ+1 < 1000 THEN SM.LSEQ+1 ELSE 1 END) SDSEQ,
		'CM',SM.ACCTOBAL,0,EX.AMOUNT,SM.ACCTOBAL+EX.AMOUNT,
		(CASE WHEN EX.PN_NO IS NULL OR EX.PN_NO='' THEN 'ADV-NO LOAN' ELSE 'ADV-' + EX.PN_NO END),
		'','',EX.ADD_DATE,'00:00:00','USER','',0,0,0,0
FROM		EXTRACT EX LEFT JOIN SDMASTER SM
		ON SM.ACCTNO=EX.ACCTNO
WHERE		EX.STATUS='1'

UPDATE 		SDMASTER 
SET 		SDMASTER.ACCTOBAL=SP.ACCTOBAL, SDMASTER.ACCTABAL=(SP.ACCTOBAL-SDMASTER.ACCTFLOATS),
		SDMASTER.LSEQ=SP.LSEQ
FROM		(SELECT		SM.ACCTNO,(SM.ACCTOBAL+EX.AMOUNT) ACCTOBAL,
				(CASE WHEN SM.LSEQ+1 < 1000 THEN SM.LSEQ+1 ELSE 1 END) LSEQ
		 FROM 		EXTRACT EX LEFT JOIN SDMASTER SM
				ON SM.ACCTNO=EX.ACCTNO
		 WHERE		EX.STATUS='1') SP
WHERE		SDMASTER.ACCTNO=SP.ACCTNO


UPDATE ADVANCE SET STATUS='2' FROM (SELECT EX.KBCI_NO,EX.LOAN_TYPE,EX.ADD_DATE 
FROM EXTRACT EX WHERE EX.STATUS='1') ET WHERE ADVANCE.KBCI_NO=EX.KBCI_NO,
EX.LOAN_TYPE=ADVANCE.LOAN_TYPE,EX.ADD_DATE=ADVANCE.ADD_DATE






select * from param_S
select * from ctrl_s

SELECT  EX.KBCI_NO,EX.PN_NO,EX.LOAN_TYPE,SM.ACCTNAME,EX.AMOUNT,EX.ADD_DATE,EX.REMARKS,
	(CASE WHEN EX.STATUS='1' THEN 'EXTRACTED' ELSE (CASE WHEN EX.STATUS='2' THEN 'POSTED' ELSE '' END) END) STATUS,
	EX.EXSEQ,EX.EXBBAL,EX.EXEBAL
FROM	EXTRACT EX LEFT JOIN SDMASTER SM
	ON EX.ACCTNO=SM.ACCTNO
ORDER BY EX.LOAN_TYPE